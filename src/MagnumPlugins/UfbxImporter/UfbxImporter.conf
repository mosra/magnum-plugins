depends=AnyImageImporter
provides=FbxImporter
provides=ObjImporter

# [configuration_]
[configuration]
# Generate normals if missing.
generateMissingNormals=false

# Fail if the file is slightly malformed.
strict=false

# Disable any exporter-specific quirks in the importer.
disableQuirks=false

# Attempt to load further files referenced by this file.
# On .obj files this would include .mtl files.
loadExternalFiles=true

# Ignore all geometry (vertices, indices) during loading.
ignoreGeometry=false

# Ignore all animation data (curves) during loading.
ignoreAnimation=false

# Ignore embedded data (such as images) during loading.
ignoreEmbedded=false

# Ignore all the actual content in the file, only loading the scene
# information such as object relationships and names.
ignoreAllContent=false

# Search for images if the relative path is not found.
# For example for an absolute path "C:/path/to/image.png" the importer will
# check if a file exists in the following order, relative to the .fbx file:
#   (depth=1) ./image.png
#   (depth=2) ./to/image.png
#   (depth=3) ./path/to/image.png
# The default value of imageSearchDepth=0 will never search for images,
# use -1 of unbounded amount of subdirectories to search.
imageSearchDepth=0

# Maximum amount of temporary memory in bytes to use, negative for unlimited.
# Loading is aborted if memory usage exceeds this limit.
maxTemporaryMemory=-1

# Maximum amount of result memory in bytes to use, negative for unlimited.
# Loading is aborted if memory usage exceeds this limit.
maxResultMemory=-1

# Normalize units to meters with right-handed Y up coordinates.
# This coordinate/unit system matches the glTF specification.
normalizeUnits=false

# Method of handling FBX "geometric transforms" that offset geometry from
# nodes without affecting children in the hierarchy. Possible values:
#  - helperNodes -- add dummy nodes between nodes and meshes where needed
#  - modifyGeometry -- modify the geometry data if possible, fall back to
#    helperNodes in some edge cases.
#  - preserve -- retain the geometry transforms as additional custom
#    SceneFields -- GeometryTranslation as Vector3d, GeometryRotation as
#    Quaterniond and GeometryScaling as Vector3d
geometryTransformHandling=helperNodes

# Method of handling normalizeUnits. Note that if set to transformRoot the
# root node is retained even if normalizeUnits=false. Possible values:
#  - adjustTransforms -- modify the top-level node transforms
#  - transformRoot -- retain an additional root node where the
#    coordinate/unit transform is stored as a normal TRS tuple
unitNormalizationHandling=adjustTransforms

# Deduplicate raw vertex data to an indexed mesh.
generateIndices=true

# Maximum number of UV sets per vertex, use negative for unbounded.
maxUvSets=-1

# Maximum number of tangent/bitangent sets per vertex, use negative for
# unbounded.
maxTangentSets=-1

# Maximum number of vertex color sets per vertex, use negative for unbounded.
maxColorSets=-1

# Maximum number of joint weights per vertex, use negative for unbounded.
maxJointWeights=-1

# Preserve factor attributes for materials instead of premultiplying them.
# For example instead of a single BaseColor the importer would return both
# BaseColor and baseColorFactor.
preserveMaterialFactors=false

# Import individual animation layers instead of animation stacks.
animationLayers=false

# Sampling rate in Hz (frames per second) for non-linear animation curves.
resampleRate=30

# Resample rotation to preserve Euler interpolation in the file.
resampleRotation=true

# Minimum sampling rate for animation that will not be resampled.
minimumSampleRate=20

# Time interval in seconds for non-continuous steps in the animation.
constantInterpolationDuration=0.001

# Include all TRS components always if even one is defined
animateFullTransform=false

# [configuration_]
