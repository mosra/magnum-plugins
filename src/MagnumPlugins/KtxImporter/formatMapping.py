#!/usr/bin/env python3

#
#   This file is part of Magnum.
#
#   Copyright © 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
#               2020, 2021 Vladimír Vondruš <mosra@centrum.cz>
#   Copyright © 2021 Pablo Escobar <mail@rvrs.in>
#
#   Permission is hereby granted, free of charge, to any person obtaining a
#   copy of this software and associated documentation files (the "Software"),
#   to deal in the Software without restriction, including without limitation
#   the rights to use, copy, modify, merge, publish, distribute, sublicense,
#   and/or sell copies of the Software, and to permit persons to whom the
#   Software is furnished to do so, subject to the following conditions:
#
#   The above copyright notice and this permission notice shall be included
#   in all copies or substantial portions of the Software.
#
#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
#   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
#   DEALINGS IN THE SOFTWARE.
#

import argparse
from collections import namedtuple
import itertools
import os
import re

parser = argparse.ArgumentParser()
parser.add_argument('magnum_source')
parser.add_argument('-o', '--output', default='formatMapping.hpp')
args = parser.parse_args()

magnum_dir = args.magnum_source
file_out = args.output

print('Writing to', file_out)

Format = namedtuple('Format', 'compressed magnum vulkan type')
formats = []

file_in = os.path.join(magnum_dir, 'src/Magnum/Vk/PixelFormat.h')

with open(file_in, encoding='utf-8') as f:
    lines = f.readlines()
    for line in lines:
        # Get mapping from VkFormat to Magnum::Vk::PixelFormat
        # PixelFormat and Vk::PixelFormat names are identical
        match = re.search('^\s+(Compressed)?(\w+) = VK_FORMAT_(\w+),?$', line)
        if match:
            compressed = match.group(1) != None
            magnum = match.group(2)
            vulkan = match.group(3)
            type = re.search('\w+_([U|S](NORM|INT|FLOAT|RGB))\w*', vulkan)
            assert type != None
            assert type.group(1) != 'URGB'
            formats.append(Format(compressed, magnum, vulkan, type.group(1)))

if len(formats) != 135:
    print('Unexpected number of formats')

# https://docs.python.org/dev/library/itertools.html#itertools-recipes
def partition(pred, iterable):
    t1, t2 = itertools.tee(iterable)
    return itertools.filterfalse(pred, t1), filter(pred, t2)

# There's no PVRTC2 in Magnum::PixelFormat
formats = [f for f in formats if not f.magnum.startswith('Pvrtc2')]

header = '''/*
    This file is part of Magnum.

    Copyright © 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
                2020, 2021 Vladimír Vondruš <mosra@centrum.cz>
    Copyright © 2021 Pablo Escobar <mail@rvrs.in>

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

/* Autogenerated from formatMapping.py! Do not edit! */

'''

with open(file_out, 'w', encoding='utf-8') as outfile:
    compressed = lambda f : f.compressed
    formats, compressed_formats = partition(compressed, formats)

    outfile.write(header)

    outfile.write('#ifdef _p /* PixelFormat */\n')
    for format in formats:
        outfile.write('_p(' + format.vulkan + ', ' + format.magnum + ', ' + format.type + ')\n')
    outfile.write('#endif\n')

    outfile.write('#ifdef _c /* CompressedPixelFormat */\n')
    for format in compressed_formats:
        outfile.write('_c(' + format.vulkan + ', ' + format.magnum + ', ' + format.type + ')\n')
    outfile.write('#endif\n')
