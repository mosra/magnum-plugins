/*
    This file is part of Magnum.

    Copyright © 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
                2020, 2021, 2022, 2023, 2024, 2025
              Vladimír Vondruš <mosra@centrum.cz>

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

namespace Magnum {

/** @page changelog-plugins Plugins

@tableofcontents
@m_footernavigation

@section changelog-plugins-latest Changes since 2020.06

@subsection changelog-plugins-latest-dependencies Dependency changes

-   Minimal supported CMake version is now 3.5, changed from 3.4, since CMake
    3.27+ warns if a compatibility with CMake below 3.5 is requested. Older
    versions are not supported anymore and all workarounds for them were
    removed. This is a conservative change, as there are no known supported
    distributions which would have anything older than 3.5.

@subsection changelog-plugins-latest-new New features

-   MSVC 2022 support. See also [mosra/corrade#124](https://github.com/mosra/corrade/issues/124)
    and [mosra/magnum#552](https://github.com/mosra/magnum/issues/552).
-   New @ref ShaderTools::SpirvToolsConverter "SpirvToolsShaderConverter"
    plugin for SPIR-V shader (dis)assembly and validation
-   New @ref ShaderTools::GlslangConverter "GlslangShaderConverter" plugin for
    GLSL shader validation and GLSL->SPIR-V compilation
-   New @relativeref{Trade,AstcImporter} plugin for reading `*.astc` files
    produced by ARM ASTC encoder and other GPU texture compression tools.
-   New @relativeref{Trade,GltfSceneConverter} plugin for exporting full scenes
    to glTF files
-   New @relativeref{Trade,KtxImporter} and @relativeref{Trade,KtxImageConverter}
    plugins for reading and writing 1D/2D/3D KTX2 files in arbitrary pixel
    formats (see [mosra/magnum-plugins#103](https://github.com/mosra/magnum-plugins/pull/103); Basis-encoded KTX2 files are passed through to
    @relativeref{Trade,BasisImporter} (see [mosra/magnum-plugins#110](https://github.com/mosra/magnum-plugins/issues/110),
    [mosra/magnum-plugins#113](https://github.com/mosra/magnum-plugins/pull/113))
-   New @ref Trade::OpenExrImporter "OpenExrImporter" and
    @ref Trade::OpenExrImageConverter "OpenExrImageConverter" plugins for
    reading and writing OpenEXR files including cube maps and custom channel
    support
-   Mew @relativeref{Trade,SpngImporter} for importing PNG images using
    libspng, which, in combination with zlib-ng, may be significantly faster
    than stock libpng
-   New @relativeref{Trade,StbDxtImageConverter} for compressing images into
    block-compressed BC1/BC3.
-   New @relativeref{Trade,StbResizeImageConverter} for image downsampling and
    upsampling. See also [mosra/magnum-plugins#143](https://github.com/mosra/magnum-plugins/pull/143).
-   New @relativeref{Trade,WebPImporter} and
    @relativeref{Trade,WebPImageConverter} plugins for importing and writing
    WebP files (see [mosra/magnum-plugins#121](https://github.com/mosra/magnum-plugins/pull/121),
    [mosra/magnum-plugins#126](https://github.com/mosra/magnum-plugins/pull/126)
    and [mosra/magnum-plugins#140](https://github.com/mosra/magnum-plugins/pull/140))
-   New @relativeref{Trade,GltfImporter} plugin for importing glTF files, which
    is a smaller, faster-compiling, faster-importing and more memory-friendly
    drop-in replacement for now-deprecated `TinyGltfImporter`. Originally built
    on top of cgltf as a `CgltfImporter` (see [mosra/magnum-plugins#107](https://github.com/mosra/magnum-plugins/pull/107)),
    eventually the cgltf dependency got dropped in favor of
    @relativeref{Corrade,Utility::Json}. The only significant behavioral
    difference is that @relativeref{Trade,GltfImporter} by default fails the
    import if the file requires an extension the importer is not aware of, but
    that can be overriden from the plugin-specific configuration. See also
    [mosra/magnum-plugins#139](https://github.com/mosra/magnum-plugins/issues/139)
    and [mosra/magnum-plugins#124](https://github.com/mosra/magnum-plugins/pull/124).
    Additionally, these new features are added compared to `TinyGltfImporter`:
    -   [MSFT_texture_dds](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Vendor/MSFT_texture_dds/README.md)
    -   [EXT_texture_webp](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Vendor/EXT_texture_webp/README.md)
    -   [EXT_texture_astc](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Vendor/EXT_texture_astc/README.md)
    -   [KHR_texture_basisu](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_texture_basisu/README.md)
    -   *Experimental* [KHR_texture_ktx](https://github.com/KhronosGroup/glTF/pull/1964)
    -   Importing arbitrary material extensions and `extras` as custom material
        attributes (see [mosra/magnum-plugins#117](https://github.com/mosra/magnum-plugins/pull/117))
    -   Importing scene node `extras` as custom scene fields
    These new features are present in the deprecated `TinyGltfImporter` as
    well:
    -   Material import reworked for the new @ref Trade::MaterialData API,
        supporting all core properties as well as everything from the
        [KHR_materials_pbrSpecularGlossiness](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness),
        [KHR_materials_unlit](https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_materials_unlit/README.md)
        and [KHR_materials_clearcoat](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat)
        extensions. All the previous limitations on texture transformation or
        coordinate set variability are now gone.
    -   Skin import through @ref Trade::AbstractImporter::skin3D(),
        @ref Trade::SceneField::Skin and related APIs
    -   Importing light range and spotlight cone angle properties
    -   Range checks on scene, node, camera, mesh, material, child and light
        references in the scene hierarchy for more robust handling of broken
        files
    -   Importing mesh morph target attributes (see [mosra/magnum-plugins#141](https://github.com/mosra/magnum-plugins/pull/141))
    -   Support for sparse accessors in mesh attributes
-   New @relativeref{Trade,UfbxImporter} plugin for robust import of FBX and
    OBJ files including all advanced material properties (see
    [mosra/magnum-plugins#133](https://github.com/mosra/magnum-plugins/pull/133)
    and [mosra/magnum-plugins#136](https://github.com/mosra/magnum-plugins/pull/136))
-   New @relativeref{Trade,BcDecImageConverter} and
    @relativeref{Trade,EtcDecImageConverter} plugins for decoding BCn and
    ETC/EAC compressed formats
-   New @relativeref{Trade,ResvgImporter}, @relativeref{Trade,LunaSvgImporter}
    and @relativeref{Trade,PlutoSvgImporter} plugins for importing SVG files as
    raster images
-   @ref Trade::AssimpImporter "AssimpImporter" now imports ambient lights,
    light attenuation and spotlight cone angle properties. See also
    [mosra/magnum-plugins#120](https://github.com/mosra/magnum-plugins/issues/120).
-   @ref Trade::AssimpImporter "AssimpImporter" now imports camera, light and
    scene names, orthographic camera properties and custom material properties
    (see [mosra/magnum-plugins#116](https://github.com/mosra/magnum-plugins/pull/116))
-   @relativeref{Trade,AssimpImporter} can now import material texture
    transformation attributes
-   @ref Trade::AssimpImporter "AssimpImporter" can now import animations and
    skins (see [mosra/magnum-plugins#97](https://github.com/mosra/magnum-plugins/pull/97),
    [mosra/magnum-plugins#99](https://github.com/mosra/magnum-plugins/pull/99)
    and [mosra/magnum-plugins#100](https://github.com/mosra/magnum-plugins/pull/100))
-   @relativeref{Trade,BasisImporter} and @relativeref{Trade,BasisImageConverter}
    plugins were updated to Basis 1.50 with UASTC, KTX2 and HDR support, in
    addition it's now also possible to supply custom mip levels, sRGB formats
    get properly recognized both on import and during conversion, and array and
    cubemap images are supported as well (see
    [mosra/magnum-plugins#86](https://github.com/mosra/magnum-plugins/issues/86),
    [mosra/magnum-plugins#112](https://github.com/mosra/magnum-plugins/pull/112),
    [mosra/magnum-plugins#118](https://github.com/mosra/magnum-plugins/pull/118),
    [mosra/magnum-plugins#119](https://github.com/mosra/magnum-plugins/pull/119),
    [mosra/magnum-plugins#145](https://github.com/mosra/magnum-plugins/pull/145),
    [mosra/magnum-plugins#146](https://github.com/mosra/magnum-plugins/pull/146))

@subsection changelog-plugins-latest-changes Changes and improvements

-   The workaround for an Assimp 4.1 white ambient bug in
    @ref Trade::AssimpImporter "AssimpImporter" can now be disabled using the
    @cb{.ini} forceWhiteAmbientToBlack @ce @ref Trade-AssimpImporter-configuration "plugin-specific option".
-   Exposed missing @ref Trade::AssimpImporter "AssimpImporter" postprocess
    options @cb{.ini} CalcTangentSpace @ce, @cb{.ini} SplitByBoneCount @ce and
    @cb{.ini} Debone @ce
-   @relativeref{Trade,AssimpImporter} now provides the `3mfImporter` alias
    for convenient loading of `*.3mf` files, and `UsdImporter` for `*.usd`,
    `*.usda`, `*.usdc` and `*.usdz` files, which are supported since version
    5.4.3
-   Adapted @relativeref{Trade,AssimpImporter} to changes in version 5.2.5 and
    cleaned up STL usage (see [mosra/magnum-plugins#130](https://github.com/mosra/magnum-plugins/pull/130))
-   @relativeref{Trade,BasisImporter} has a new @cb{.ini} assumeYUp @ce option
    that assumes the file is encoded Y-up even if the orientation metadata is
    missing or says otherwise, silencing a warning about wrong orientation of
    imported data
-   @relativeref{Trade,DdsImporter} now supports also 1D textures, cube maps,
    1D, 2D and cube map arrays; all DXGI depth, stencil and compressed formats,
    legacy non-DXGI RGBX, BGRX, 16-bit normalized, half-float, float, BC4 and
    BC5 formats, BGR(A) formats also for files with the DXT10 header;
    uncompressed sRGB formats are now properly imported as
    @ref PixelFormat::RGBA8Srgb instead of @ref PixelFormat::RGBA8Unorm.
    Additionally the plugin also imports non-standard ASTC formats produced by
    NVidia Texture Tools Exporter. See also
    [mosra/magnum-plugins#67](https://github.com/mosra/magnum-plugins/pull/67).
-   @ref Text::FreeTypeFont "FreeTypeFont" now treats its internal global
    library handle as thread-local on all platforms except Windows, making it
    possible to be used in multi-threaded environments
-   Adapted @relativeref{Trade,MeshOptimizerSceneConverter} to breaking changes
    in meshoptimizer 0.18+, implementing new @cb{.ini} simplifyLockBorder @ce,
    @cb{.ini} simplifySparse @ce, @cb{.ini} simplifyErrorAbsolute @ce,
    @cb{.ini} simplifyPrune @ce, @cb{.ini} simplifyRegularize @ce and
    @cb{.ini} simplifyPermissive @ce options
-   @ref Trade::StanfordImporter "StanfordImporter" now supports also indices
    specified as `vertex_index`, which is what Assimp uses for export (see
    [mosra/magnum-plugins#94](https://github.com/mosra/magnum-plugins/pull/94))
-   @relativeref{Trade,StanfordImporter} and @relativeref{Trade,StlImporter}
    now delegate parsing of ASCII files to @relativeref{Trade,AssimpImporter}
    if available instead of failing the import.
-   @relativeref{Trade,StanfordSceneConverter} now requires the input mesh to
    always have a position attribute. This was not enforced before, leading to
    files that couldn't be opened with @relativeref{Trade,StanfordImporter} nor
    with most other libraries.
-   @ref Trade::StbImageImporter "StbImageImporter" now imports 16-bit PNG and
    PSD files as 16-bit instead of converting to 8 bit
-   @ref Trade::StbImageImporter "StbImageImporter" now makes it possible to
    override imported image channel count using @cb{.ini} forceChannelCount @ce
-   @relativeref{Trade,StbImageConverter} can now detect output format from the
    file extension when calling
    @relativeref{Trade::AbstractImageConverter,convertToData()} without having
    to load the plugin with a concrete format alias
-   @ref Audio::DrFlacImporter "DrFlacAudioImporter" no longer advertises
    support for 32-bit-per-channel FLAC files, as there's no known way to
    produce them and thus the case is impossible to test for.
-   @relativeref{Trade,BasisImageConverter} no longer produces excessive log on
    output by default, only if @ref Trade::ImporterFlag::Verbose is set (see
    [mosra/magnum-plugins#112](https://github.com/mosra/magnum-plugins/pull/112))
-   As no image converter plugins except @relativeref{Trade,KtxImageConverter}
    support 1D images, they warn when an image with @ref ImageFlag2D::Array is
    passed and treat is as a regular 2D image. In case of
    @relativeref{Trade,BasisImageConverter} this is an error, as treating the
    image as 2D would incur a significant data loss.
-   @relativeref{Trade,PngImporter} and @relativeref{Trade,StbImageImporter}
    now expose a @cb{.ini} forceBitDepth @ce option which allows to convert the
    images to a different bit depth using libpng and stb_image own
    functionality
-   Added a @cb{.ini} simplifyFailEmpty @ce option to
    @relativeref{Trade,MeshOptimizerSceneConverter} that makes the
    simplification fail if it would result in an empty mesh instead of just
    returning it
-   @relativeref{Trade,PrimitiveImporter} now handles configuration errors such
    as invalid circle segment count gracefully instead of passing the value
    through and causing an assertion inside the @ref Primitives library

@subsection changelog-plugins-latest-buildsystem Build system

-   The oldest supported Clang version is now 6.0 (available on Ubuntu 18.04),
    or equivalently Apple Clang 10.0 (Xcode 10). Oldest supported GCC version
    is still 4.8.
-   The `versionPlugins.h` header now gets populated from Git correctly also
    when inside a CMake subproject
-   Travis banned everyone from using their CI and so all Linux, macOS,
    Emscripten, Android and iOS builds were migrated from Travis to Circle CI,
    together with adding also an explicit ARM64 build. See also
    [mosra/magnum#350](https://github.com/mosra/magnum/issues/350) and
    [mosra/magnum#523](https://github.com/mosra/magnum/issues/523).
-   `UseEmscripten` is no longer implicitly included on Emscripten as it's not
    needed for anything (see [mosra/magnum#490](https://github.com/mosra/magnum/issues/490))
-   It's now possible to use `<PackageName>_ROOT` to point to install locations
    of dependencies such as Corrade on CMake 3.12+, in addition to putting them
    all together inside `CMAKE_PREFIX_PATH`. See also [mosra/magnum#614](https://github.com/mosra/magnum/issues/614).
-   On CMake 3.16 and newer, `FindMagnumPlugins.cmake` can provide additional
    details if some component is not found.
-   `FindAssimp.cmake` now attempts to use installed Assimp CMake config files,
    if they are not broken, to correctly find and link to all dependencies in
    case of a static build. This is mainly to support static builds in Vcpkg,
    vanilla Assimp 5.0.1 config files are irreparably broken on all platforms
    except dynamic Windows builds.
-   The Homebrew package now uses `std_cmake_args` instead of hardcoded build
    type and install prefix, which resolves certain build issues (see
    [mosra/homebrew-magnum#6](https://github.com/mosra/homebrew-magnum/pull/6))
-   Suppressed a GCC 10 warning about a (harmless) uninitialized variable in
    `TinyGltfImporter` (see [mosra/magnum-plugins#104](https://github.com/mosra/magnum-plugins/issues/104))
-   Updated Debian build instructions to pass `--no-sign` to
    `dpkg-buildpackage`, avoiding a confusing error message that might lead
    people to think the packaging failed (see [mosra/magnum-plugins#105](https://github.com/mosra/magnum-plugins/issues/105))
-   Fixed Debian packages to use correctly named OpenEXR dependency on Ubuntu
    20.04 and Debian Buster (see [mosra/magnum-plugins#105](https://github.com/mosra/magnum-plugins/issues/105),
    [mosra/magnum-plugins#108](https://github.com/mosra/magnum-plugins/pull/108))
-   Fixed @relativeref{Trade,StbImageImporter} to build again with
    @ref CORRADE_BUILD_MULTITHREADED disabled.
-   Changed handling of `CMAKE_*_OUTPUT_DIRECTORY` to make plugins pick it up
    also if only e.g. `CMAKE_RUNTIME_OUTPUT_DIRECTORY` is set, but not
    `ARCHIVE` or `LIBRARY_OUTPUT_DIRECTORY`. Similarly it now also handles
    config-specific `CMAKE_*_OUTPUT_DIRECTORY_<CONFIG>` variables. See also
    [mosra/magnum#486](https://github.com/mosra/magnum/issues/486) and
    [mosra/magnum-plugins#123](https://github.com/mosra/magnum-plugins/pull/123).
-   Fixed wrong `.gitattributes` option for LF line endings in MSYS PKGBUILDs
    (see [mosra/magnum-plugins#125](https://github.com/mosra/magnum-plugins/issues/125))
-   Fixed a build breakage with libc++ 15+ (see
    [mosra/magnum-plugins#131](https://github.com/mosra/magnum-plugins/pull/131))
-   Fixed building of some tests if Magnum isn't installed in a global include
    path (see [mosra/magnum-plugins#132](https://github.com/mosra/magnum-plugins/pull/132))
-   It's now possible to build dynamic libraries on Android and Emscripten with
    the usual options. Static libraries are still a default but it isn't
    enforced anymore. See [mosra/magnum#617](https://github.com/mosra/magnum/pull/617).
-   Fixed most remaining warnings on MSVC, in particular those related to
    "conversion from T to void * of greater size" (see
    [mosra/magnum#544](https://github.com/mosra/magnum/issues/544)).
-   Fixed `FindMagnumPlugins.cmake` to correctly find the Magnum Plugins
    include directory when it's installed to a different directory than Magnum
    itself (see [mosra/magnum-integration#105](https://github.com/mosra/magnum-integration/issues/105))
-   Magnum Plugins now automatically install and use Find modules for their
    dependencies in a way that doesn't clash with modules of the same name
    potentially installed by other software, meaning the user doesn't need to
    copy and carry them along anymore (see [mosra/magnum#436](https://github.com/mosra/magnum/issues/436))
-   Fixed remaining warnings related to `-fvisibility-inlines-hidden` on Mac
    (see [mosra/magnum#551](https://github.com/mosra/magnum/issues/551))
-   Created a RPM package with a helper script for building (see
    [mosra/magnum-plugins#111](https://github.com/mosra/magnum-plugins/pull/111)
    and [mosra/magnum-plugins#147](https://github.com/mosra/magnum-plugins/pull/147))

@subsection changelog-plugins-latest-bugfixes Bug fixes

-   Fixed @ref Audio::DrMp3Importer "DrMp3AudioImporter" to calculate proper
    buffer length for multi-channel files -- it was always taking just a single
    channel into account
-   @ref Trade::AssimpImporter "AssimpImporter" used to add a strange "skeleton
    visualizer" meshes to files such as COLLADA even though the file had no
    skeletons in the first place. Turns out this was due to insane defaults and
    it was enough to just disable such misfeature. See also
    [mosra/magnum-plugins#99](https://github.com/mosra/magnum-plugins/pull/99).
-   @ref Trade::AssimpImporter "AssimpImporter" now correctly imports files
    with backslashes in image paths also on non-Windows platforms (see
    [mosra/magnum-plugins#101](https://github.com/mosra/magnum-plugins/issues/101)
    and [mosra/magnum-plugins#102](https://github.com/mosra/magnum-plugins/pull/102))
-   @relativeref{Trade,AssimpImporter},
    @relativeref{Trade,OpenGexImporter} and
    @relativeref{Trade,GltfImporter} now correctly propagate
    @ref Trade::ImporterFlags to delegated image importer plugins, instead of
    the setting (such as verbose output) affecting only the top-level plugin
-   Fixed a few cases where @relativeref{Trade,DdsImporter} could assert or
    crash when encountering a premature end of file
-   @relativeref{Trade,DdsImporter} now implicitly performs Y- and Z-flip on
    uncompressed images consistently with other importers
-   @ref Trade::JpegImageConverter "JpegImageConverter" was mistakenly using
    the `MAGNUM_BUILD_STATIC` CMake option instead of
    `MAGNUM_BUILD_PLUGINS_STATIC`
-   Fixed @ref Trade::BasisImporter "BasisImporter" to work with direct
    instantiation without a plugin manager (see [mosra/magnum-plugins#96](https://github.com/mosra/magnum-plugins/pull/96))
-   Assorted `Trade,TinyGltfImporter` robustness improvements (see
    [mosra/magnum-plugins#106](https://github.com/mosra/magnum-plugins/pull/106),
    [mosra/magnum-plugins#109](https://github.com/mosra/magnum-plugins/pull/109)):
    -   Fixed an out-of-bounds read happening with empty animations when
        @cb{.ini} optimizeQuaternionShortestPath @ce is enabled
    -   Graceful handling of invalid texture sampler values, instead of
        asserting
    -   Better checks for out-of-bounds image, sampler and accessor references
    -   Robust handling of invalid scene hierarchies such as cycles or multiple
        parent nodes
    -   Better warning messages in certain pathological cases
-   Passing a RG input to @relativeref{Trade,BasisImageConverter} while also
    having @cb{.ini} swizzle=rrrg @ce (or, previously,
    @cb{.ini} separate_rg_to_color_alpha=true @ce) set led to the image having
    the red channel repeated four times, losing the green channel. This is now
    fixed to not perform an implicit RRRG swizzle if the @cb{.ini} swizzle @ce
    option is set. See also [mosra/magnum-plugins#112](https://github.com/mosra/magnum-plugins/pull/112).
-   Fixed loading of embedded FBX textures in @relativeref{Trade,AssimpImporter}
    (see [mosra/magnum-plugins#127](https://github.com/mosra/magnum-plugins/issues/127),
    [mosra/magnum-plugins#128](https://github.com/mosra/magnum-plugins/pull/128))
-   @relativeref{Trade,PngImporter} and @relativeref{Trade,PngImageConverter}
    no longer asserts if the patch version of libpng changed, such as when a
    system package was upgraded from 1.6.37 to 1.6.38. If the major or minor
    version changes, it's still an assert.

@subsection changelog-plugins-latest-deprecated Deprecated APIs

-   All @ref building-plugins-features "CMake build options" are now prefixed
    with `MAGNUM_`. For backwards compatibility, unless
    @ref MAGNUM_BUILD_DEPRECATED is disabled and unless a prefixed option is
    already set during the initial run, the unprefixed options are still
    recognized with a warning. See also [mosra/corrade#139](https://github.com/mosra/corrade/issues/139).
-   The `TinyGltfImporter` plugin is now deprecated in favor of an actually
    lightweight @relativeref{Trade,GltfImporter}. The `CgltfImporter` plugin,
    which is where the @relativeref{Trade,GltfImporter} originally comes from,
    is now just a deprecated alias to it as well.
-   Variables `ASSIMP_LIBRARY_{DEBUG,RELEASE}` and `ASSIMP_INCLUDE_DIR` that
    could be used to force Assimp location in `FindAssimp.cmake` are deprecated
    in favor of `Assimp_LIBRARY_{DEBUG,RELEASE}` and `Assimp_INCLUDE_DIR`
-   As @relativeref{Trade,BasisImporter}, @relativeref{Trade,DdsImporter} and
    @relativeref{Trade,KtxImporter} now annotate cube map and array images
    using @ref ImageFlag3D::CubeMap and
    @ref ImageFlag3D::Array "ImageFlag*D::Array", retrieving their type via
    @ref Trade::TextureData::type() is deprecated and available only for
    backwards compatibility unless @ref MAGNUM_BUILD_DEPRECATED is disabled.
-   Direct plugin instantiation through the constructors isn't a supported use
    case anymore, as such a code path is not easy to test in common setups and
    requires significant code duplication in order to preserve plugin-specific
    configuration options. Instantiate though the plugin manager instead.

@subsection changelog-plugins-latest-compatibility Potential compatibility breakages, removed APIs

-   @relativeref{Trade,BasisImporter} and @relativeref{Trade,BasisImageConverter}
    plugins don't compile against the previous 1.11 version of Basis anymore,
    you have to update the dependency to the `v1_15_update2` tag (see
    [mosra/magnum-plugins#112](https://github.com/mosra/magnum-plugins/pull/112))
-   @relativeref{Trade,BasisImporter} and @relativeref{Trade,BasisImageConverter}
    plugins now rely on externally supplied zstd installation instead of using
    the amalgamated file in Basis sources, which is outdated, lacks security
    fixes and many optimizations. If no zstd is found, the Basis library is
    compiled without zstd support. See [mosra/magnum-plugins#115](https://github.com/mosra/magnum-plugins/pull/115).
-   The @cb{.ini} separate_rg_to_color_alpha @ce option from
    @relativeref{Trade,BasisImageConverter} is gone, use
    @cb{.ini} swizzle=rrrg @ce instead. For RG inputs this is done implicitly
    and you don't need to set this option. See also [mosra/magnum-plugins#112](https://github.com/mosra/magnum-plugins/pull/112).
-   The `Bc7RGB` target format for @relativeref{Trade,BasisImporter}
    is removed, use `Bc7RGBA` instead (see
    [mosra/magnum-plugins#112](https://github.com/mosra/magnum-plugins/pull/112))
-   Because @relativeref{Trade,DdsImporter} was fixed to perform Y- and
    Z-flip on uncompressed images to ensure consistency with other importers,
    code that relied on the previous broken behavior will break. Either Y-flip
    the files or set the @cb{.ini} assumeYUpZBackward @ce option to fix this.
-   @relativeref{Trade,GltfImporter} no longer returns @cpp 0 @ce from
    @relativeref{Trade::AbstractImporter,defaultScene()} if
    no @cb{.json} "scene" @ce property is present and the file contains at
    least one scene, and returns @cpp -1 @ce instead. This is in order to
    support use cases depending on the (lack of the) default scene specifier.

@subsection changelog-plugins-latest-documentation Documentation

-   Various fixes and updates (see [mosra/magnum-plugins#98](https://github.com/mosra/magnum-plugins/pull/98),
    [mosra/magnum-plugins#114](https://github.com/mosra/magnum-plugins/pull/114),
    [mosra/magnum-plugins#135](https://github.com/mosra/magnum-plugins/pull/135))

@section changelog-plugins-2020-06 2020.06

Released 2020-06-27, tagged as
[v2020.06](https://github.com/mosra/magnum-plugins/releases/tag/v2020.06).

@subsection changelog-plugins-2020-06-new New features

-   Multi-primitive mesh support in @ref Trade::AssimpImporter "AssimpImporter",
    consistent with `TinyGltfImporter` behavior (see
    [mosra/magnum-plugins#68](https://github.com/mosra/magnum-plugins/pull/68)
    and [mosra/magnum-plugins#81](https://github.com/mosra/magnum-plugins/pull/81))
-   Tangent and bitangent import in @ref Trade::AssimpImporter "AssimpImporter",
    normal texture support
-   Vertex color, normal, texture coordinate and per-vertex object ID import in
    @ref Trade::StanfordImporter "StanfordImporter"; colors, normals and object
    IDs are supported per-face as well
-   Custom vertex and face attribute import in
    @ref Trade::StanfordImporter "StanfordImporter"
-   Support for the `KHR_lights_punctual` extension in `TinyGltfImporter`,
    replacing the obsolete unuspported `KHR_lights_cmn` (see
    [mosra/magnum-plugins#77](https://github.com/mosra/magnum-plugins/pull/77))
-   Support for the `KHR_texture_transform` and `KHR_mesh_quantization`
    extensions in `TinyGltfImporter`
-   Tangent, object ID and custom vertex attribute support in
    `TinyGltfImporter`, normal texture import
-   @ref Trade::DdsImporter "DdsImporter" and
    @ref Trade::BasisImporter "BasisImporter", now support loading image mip
    levels; @ref Trade::AssimpImporter "AssimpImporter",
    @ref Trade::OpenGexImporter "OpenGexImporter" and `TinyGltfImporter` were
    updated to proxy mip level loading to image importer plugins (see
    [mosra/magnum#369](https://github.com/mosra/magnum/pull/369))
-   New @ref Trade::IcoImporter "IcoImporter" plugin for importing ICO files
    with embedded PNGs (see [mosra/magnum-plugins#79](https://github.com/mosra/magnum-plugins/pull/79))
-   New @ref Trade::PrimitiveImporter "PrimitiveImporter" plugin for accessing
    contents of the @ref Primitives library via importer APIs
-   New @ref Trade::StanfordSceneConverter "StanfordSceneConverter" for
    writing binary PLY files
-   New @ref Trade::StlImporter "StlImporter" plugin for importing binary STL
    files
-   New @ref Trade::MeshOptimizerSceneConverter "MeshOptimizerSceneConverter"
    plugin, integrating [meshoptimizer](https://github.com/zeux/meshoptimizer)
-   Animated GIF support in @ref Trade::StbImageImporter "StbImageImporter"
-   Texture coordinate set import in @ref Trade::AssimpImporter "AssimpImporter"
    and `TinyGltfImporter` (see [mosra/magnum-plugins#83](https://github.com/mosra/magnum-plugins/pull/83))

@subsection changelog-plugins-2020-06-changes Changes and improvements

-   @ref Trade::AssimpImporter "AssimpImporter" now imports color alpha channel
    in @ref Trade::PhongMaterialData as well as importing both color and
    texture for file formats that support it
-   @ref Trade::DevIlImageImporter "DevIlImageImporter" now also considers file
    extension when detecting file format, being able to open files that don't
    really have any easy-to-detect magic header; additionally the file type can
    be also forced though a plugin-specific configuration option.
-   @ref Trade::DevIlImageImporter "DevIlImageImporter" can now load
    multi-image files such as `*.ico`s or animated GIFs
-   Minor speedup in the @ref Text::StbTrueTypeFont "StbTrueTypeFont" plugin by
    avoiding use of 64-bit floating-point operations (see
    [mosra/magnum-plugins#73](https://github.com/mosra/magnum-plugins/pull/73))
-   `TinyGltfImporter` now supports interleaved animation and mesh attributes
-   `TinyGltfImporter` and @ref Trade::OpenGexImporter "OpenGexImporter" now
    import both color and texture information instead of only one of them
-   @ref Trade::AssimpImporter "AssimpImporter" inadvertently ignored base
    orientation for files that are defined with Z up instead of Y, this
    behavior is now also configurable (see [mosra/magnum-plugins#82](https://github.com/mosra/magnum-plugins/pull/82))
-   @ref Trade::AssimpImporter "AssimpImporter",
    @ref Trade::DdsImporter "DdsImporter" and
    @ref Trade::StanfordImporter "StanfordImporter" now recognize the
    @ref Trade::ImporterFlag::Verbose flag, printing verbose messages on the
    output if enabled
-   @ref Trade::StbImageImporter "StbImageImporter" is now thread-safe if
    @ref CORRADE_BUILD_MULTITHREADED is enabled.
-   Library version is now exposed through `MAGNUMPLUGINS_VERSION_YEAR`,
    `MAGNUMPLUGINS_VERSION_MONTH`, `MAGNUMPLUGINS_VERSION_COMMIT`,
    `MAGNUMPLUGINS_VERSION_HASH` and `MAGNUMPLUGINS_VERSION_STRING`
    preprocessor defines in a new `Magnum/versionPlugins.h` header. This header
    is not included by any other header to avoid trigerring a full rebuild when
    Git commit changes. If Git is not found, only the first two defines are
    present.
-   @ref Trade::PngImporter now recognizes and imports gray+alpha files as well
    (see [mosra/magnum-plugins#71](https://github.com/mosra/magnum-plugins/issues/71))

@subsection changelog-plugins-2020-06-buildsystem Build system

-   `FindAssimp.cmake` is updated to look for IrrXML on all systems, not just
    Windows, since Vcpkg has the static build the same on all platforms
-   `FindBasisUniversal.cmake` is updated to work with the Vcpkg package of
    Basis Universal (and consequently builds of the fork at
    https://github.com/jherico/basis_universal as well). See
    [mosra/magnum-plugins#72](https://github.com/mosra/magnum-plugins/pull/72).
-   Disabling file I/O APIs in the @ref Audio::DrFlacImporter "DrFlacAudioImporter"
    as they weren't used and unnecessarily pulled in `windows.h`; fixed static
    builds of @ref Trade::JpegImageConverter "JpegImageConverter" and
    @ref Trade::JpegImporter "JpegImporter" on with libjpeg coming from MSYS2
    MinGW packages (see [mosra/magnum-plugins#74](https://github.com/mosra/magnum-plugins/pull/74))
-   Fixed build of @ref Audio::DrWavImporter "DrWavAudioImporter" on static
    libraries with dynamic plugins (see [mosra/magnum-plugins#78](https://github.com/mosra/magnum-plugins/issues/78))
-   The library again compiles and tests cleanly with @ref CORRADE_NO_ASSERT
    enabled, and this setup is verified on the CI to avoid further regressions
-   Properly installing plugin binaries in Gentoo packages (see
    [mosra/magnum-plugins#85](https://github.com/mosra/magnum-plugins/issues/85))

@subsection changelog-plugins-2020-06-bugfixes Bug fixes

-   @ref Trade::AssimpImporter "AssimpImporter" could crash on a
    division-by-zero when custom file callbacks encounter an empty file
-   Importing one image multiple times with
    @ref Trade::DevIlImageImporter "DevIlImageImporter" would cause it being
    differently flipped every time
-   Fixed a crash in @ref Trade::PngImporter "PngImporter" when encountering
    palette files with less than 8 bits per pixel

@subsection changelog-plugins-2020-06-compatibility Potential compatibility breakages, removed APIs

-   Removed @ref OpenDdl headers in `MagnumPlugins/OpenGexImporter/OpenDdl`
    that were deprecated in 2018.04, include them from the `Magnum/OpenDdl`
    directory instead.
-   `TinyGltfImporter` translation of PBR materials into a Phong shading model
    left @ref Trade::PhongMaterialData::shininess() set at @cpp 1.0f @ce, which
    wasn't a good default. Now it's set to @cpp 80.0f @ce to match defaults
    of @cpp Shaders::Phong @ce
-   Support for the [KHR_materials_cmnBlinnPhong](https://github.com/KhronosGroup/glTF/tree/gltf2-common-materials/extensions/Khronos/KHR_materials_cmnBlinnPhong)
    glTF extension has been removed from `TinyGltfImporter, as it seems to be
    effectively abandoned. The branch didn't see any update since 2017 and
    there are no exporters supporting it.
-   The bundled `tiny_gltf` code was updated from `v2.0.0` to `v2.4.1` in order
    to implement support for `KHR_lights_punctual`. A lot happened between
    these two versions including a change in how it parses numeric data. It may
    cause the imported transformations to be slightly different than in
    2019.10, resulting in very minor differences in rendered images,
    particularly on aliased edges. See also [facebookresearch/habitat-sim#496](https://github.com/facebookresearch/habitat-sim/pull/496).
-   @ref Trade::DdsImporter "DdsImporter" now exposes mip levels not as
    separate images, but through the new @p level parameter and
    @ref Trade::AbstractImporter::image2DLevelCount() /
    @ref Trade::AbstractImporter::image3DLevelCount() APIs.

@section changelog-plugins-2019-10 2019.10

Released 2019-10-24, tagged as
[v2019.10](https://github.com/mosra/magnum-plugins/releases/tag/v2019.10).

@subsection changelog-plugins-2019-10-dependencies Dependency changes

-   Minimal supported CMake version is now 3.4. Older versions are not
    supported anymore and all workarounds for them were removed. Download a
    prebuilt release of a newer version if you need to use Corrade on older
    systems (such as Ubuntu 14.04 or Debian 8). This is a conservative change
    that shouldn't affect any additional distribution compared to the CMake 3.1
    requirement in 2019.01.

@subsection changelog-plugins-2019-10-new New features

-   MSVC 2019 compatibility, following other Magnum projects
-   When using Magnum as a CMake subproject, it now puts all binaries into a
    common directory to simplify `PATH` handling and dynamic plugin loading.
    For more information see @ref cmake-plugins-subproject,
    [mosra/magnum#357](https://github.com/mosra/magnum/issues/357) and
    [mosra/magnum-plugins#63](https://github.com/mosra/magnum-plugins/issues/63).
-   New @ref Audio::DrMp3Importer "DrMp3AudioImporter" plugin for importing
    MP3 files (see [mosra/magnum-plugins#60](https://github.com/mosra/magnum-plugins/pull/60))
-   New @ref Trade::BasisImporter "BasisImporter" and
    @ref Trade::BasisImageConverter "BasisImageConverter" plugin for importing
    and converting Basis files, support for Basis-encoded textures in
    `TinyGltfImporter` (see [mosra/magnum-plugins#62](https://github.com/mosra/magnum-plugins/pull/62),
    [mosra/magnum-plugins#65](https://github.com/mosra/magnum-plugins/pull/65)
    and [mosra/magnum-plugins#69](https://github.com/mosra/magnum-plugins/issues/69))

@subsection changelog-plugins-2019-10-changes Changes and improvements

-   Calling @ref Trade::AbstractImporter::image2D() "image2D()" in
    @ref Trade::AssimpImporter "AssimpImporter",
    @ref Trade::OpenGexImporter "OpenGexImporter" and
    `TinyGltfImporter` now behaves consistently in regards to file loading
    callbacks --- failing with an error if and only if image is not embedded,
    the file is not opened from a filesystem and file loading callbacks are not
    set. Previously it could errorneously assert even when loading embedded
    images, try to look for images on the filesystem when loading in-memory
    data or fail to open images when a file inside current working directory
    was opened.
-   The @ref Trade::AssimpImporter "AssimpImporter" plugin now detects ambient
    color set to @cpp 0xffffff_srgbf @ce and forces it back to
    @cpp 0x000000_srgbf @ce. This is a bug in Assimp 4.1, causing all other
    color information to get discarded. See also
    [assimp/assimp#2059](https://github.com/assimp/assimp/issues/2059),
    [assimp/assimp#2563](https://github.com/assimp/assimp/pull/2563) and
    [mosra/magnum-plugins#64](https://github.com/mosra/magnum-plugins/pull/64).
-   The @ref Trade::AssimpImporter "AssimpImporter" plugin now trims trailing
    space from image paths in order to deal better with OBJ meshes from hell
    (see [mosra/magnum-plugins#58](https://github.com/mosra/magnum-plugins/pull/58))
-   The @ref Trade::AssimpImporter "AssimpImporter" plugin now imports each
    image just once in case a single image is shared by more than one texture
-   @ref Trade::JpegImporter "JpegImporter" now prints error info to
    @ref Corrade::Utility::Error, allowing it to be redirected or suppressed
    consistently to other plugin implementations (see
    [mosra/magnum-plugins#53](https://github.com/mosra/magnum-plugins/pull/53))
-   @ref Trade::PngImporter "PngImporter" and
    @ref Trade::PngImageConverter "PngImageConverter" now print error and
    warning info to @ref Corrade::Utility::Error and
    @ref Corrade::Utility::Warning, allowing it to be redirected to suppressed
    consistently to other plugin implementations
-   @ref Trade::DevIlImageImporter "DevIlImageImporter" now converts BGR data
    to RGB instead of expanding them to RGBA
-   @ref Trade::DevIlImageImporter "DevIlImageImporter",
    @ref Trade::JpegImporter "JpegImporter",
    @ref Trade::PngImporter "PngImporter" and
    @ref Trade::StbImageConverter "StbImageImporter" now properly report an
    error message when opening an empty file
-   Switched `TinyGltfImporter` to use @cpp Corrade::Utility::Directory::read() @ce
    instead of tiny_gltf's internal APIs for loading external files, making it
    work correctly for UTF-8 paths on Windows
-   Better diagnostics in `TinyGltfImporter` when an external buffer file is
    not found or when a file loaded from memory attempts to reference an
    external buffer without file callbacks being set
-   @ref Audio::DrFlacImporter "DrFlacAudioImporter",
    @ref Audio::DrWavImporter "DrWavAudioImporter" and
    @ref Audio::StbVorbisImporter "StbVorbisAudioImporter" plugins no longer
    treat files with zero samples as errors, but give back an empty buffer
    instead
-   Updated `dr_wav` for @ref Audio::DrWavImporter "DrWavAudioImporter" to
    version 0.8.5 which supports a wider range of file types (see
    [mosra/magnum-plugins#61](https://github.com/mosra/magnum-plugins/pull/61))
-   Actually reporting errors from @ref Text::FreeTypeFont "FreeTypeFont"
    instead of just failing without a message

@subsection changelog-plugins-2019-10-buildsystem Build system

-   @ref building-plugins-packages-msys "MSYS2 packages" are now in official
    repositories, installable directly via `pacman`
-   The @ref Trade::JpegImageConverter "JpegImageConverter" plugin was
    mistakenly using the `JPEG_INCLUDE_DIRS` CMake variable which was not
    present on versions before 3.12. The @ref Trade::JpegImporter "JpegImporter"
    plugin is not affected by this. See also
    [mosra/magnum-plugins#51](https://github.com/mosra/magnum-plugins/issues/51).
-   Upgraded `TinyGltfImporter` to use json.hpp 3.3.0, fixing a compile error
    on some Clang versions (see [mosra/magnum-plugins#54](https://github.com/mosra/magnum-plugins/issues/54))
-   Fixed `FindMagnumPlugins.cmake` to behave correctly when both a debug and
    a release version of libjpeg is found
-   Fixed `FindMagnumPlugins.cmake` to correctly handle the `AssimpImporter`,
    and `JpegImageConverter` components
-   `FindMagnumPlugins.cmake` now correctly finds debug versions of statically
    built plugins when using Vcpkg
-   Fixed `FindMagnumPlugins.cmake` to correctly link to zlib also when both
    a debug and a release version of libpng is found
-   `FindAssimp.cmake` now can optionally link to the IrrXML library (needed
    for static builds on Vcpkg)
-   Emscripten builds now have the `-fPIC` option disabled by default as it
    causes linker errors related to `__memory_base` on 1.38.36 (see also
    [emscripten-core/emscripten#8761](https://github.com/emscripten-core/emscripten/issues/8761))

@subsection changelog-plugins-2019-10-bugfixes Bug fixes

-   @ref Trade::AssimpImporter "AssimpImporter" was returning a random value
    for material shininess with STL models, now it correctly returns
    @cpp 0.0f @ce when the shininess value is not present.
-   For files that had multiple textures,
    @ref Trade::AssimpImporter "AssimpImporter" was incorrectly importing only
    the first image, multiple times. Fixed independently also by
    [mosra/magnum-plugins#66](https://github.com/mosra/magnum-plugins/pull/66)
    which got submitted three minutes after the change was pushed to `master`.
-   @ref Trade::StbImageImporter "StbImageImporter" was not correctly handling
    image import failures, randomly hitting unreachable code assertions
-   Fixed @ref Trade::DevIlImageImporter "DevIlImageImporter" BGR(A)-to-RGB(A)
    conversion to not return random memory
-   @ref Trade::PngImporter "PngImporter" now handles too short files
    gracefully instead of aborting on an assertion
-   @ref Trade::PngImporter "PngImporter" now handles paletted images and
    images with tRNS alpha mask correctly
-   Fixed memory leaks in @ref Trade::PngImporter "PngImporter" error handling
-   Fixed `FindMagnumPlugins.cmake` to correctly look for the `Assimp` package
-   Fixed handling of corrupted / incomplete data in
    @ref Text::StbTrueTypeFont "StbTrueTypeFont" (see
    [mosra/magnum-plugins#29](https://github.com/mosra/magnum-plugins/issues/29))

@subsection changelog-plugins-2019-10-compatibility Potential compatibility breakages, removed APIs

-   Removed the `ColladaImporter` plugin, deprecated since 2018.10, because it
    was based on an outdated toolkit and, due to the complexity of the COLLADA
    format and poor conformance of various exporters, it was not feasible to
    maintain a builtin importer anymore.

@section changelog-plugins-2019-01 2019.01

Released 2019-02-04, tagged as
[v2019.01](https://github.com/mosra/magnum-plugins/releases/tag/v2019.01).

@subsection changelog-plugins-2019-01-dependencies Dependency changes

-   Minimal supported GCC version is now 4.8.1, GCC 4.7 is not supported
    anymore. Minimal Clang version is now 3.3, since that's the first version
    with a complete C++11 support. See also
    [mosra/magnum#274](https://github.com/mosra/magnum/issues/274).
-   Minimal supported CMake version is now 3.1. Older versions are not
    supported anymore and all workarounds for them were removed. Download a
    prebuilt release of a newer version if you need to use Corrade on older
    systems (such as Ubuntu 14.04 or Debian 8). See also
    [mosra/magnum#274](https://github.com/mosra/magnum/issues/274).

@subsection changelog-plugins-2019-01-new New features

-   New @ref Audio::Faad2Importer "Faad2AudioImporter" plugin for importing
    AAC files using [FAAD2](https://www.audiocoding.com/faad2.html)

@subsection changelog-plugins-2019-01-changes Changes and improvements

-   Fixed compatibility of the @ref OpenDdl library with Emscripten 1.38.10
    and newer, which defines @ref std::size_t as @cpp unsigned long @ce instead
    of @cpp unsigned int @ce used previously (it's still a four-byte type,
    though)

@subsection changelog-plugins-2019-01-buildsystem Build system

-   The `package/msys` directory now contains `PKGBUILD`s for
    [MSYS2](https://www.msys2.org/). See @ref building-plugins-packages-msys
    for more information. See also [mosra/magnum-plugins#50](https://github.com/mosra/magnum-plugins/pull/50).
-   The bundled `FindAssimp.cmake` module now works under MinGW as well.

@subsection changelog-plugins-2019-01-compatibility Potential compatibility breakages, removed APIs

-   Removed `MAGNUMPLUGINS_*_LIBRARIES` and `MAGNUMPLUGINS_*_INCLUDE_DIRS`
    CMake variables, which were deprecated in favor of `MagnumPlugins::*`
    imported targets in February 2016.

@section changelog-plugins-2018-10 2018.10

Released 2018-10-23, tagged as
[v2018.10](https://github.com/mosra/magnum-plugins/releases/tag/v2018.10).

@subsection changelog-plugins-2018-10-new New features

-   Support for object transformation animation import in `TinyGltfImporter`
    (see [mosra/magnum-plugins#46](https://github.com/mosra/magnum-plugins/pull/46))
-   New @ref Trade::JpegImageConverter plugin for writing JPEG files (see
    [mosra/magnum-plugins#26](https://github.com/mosra/magnum-plugins/pull/26))
-   Minimal support for the [KHR_materials_pbrSpecularGlossiness](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness)
    extension `TinyGltfImporter`
-   The top-level `tinygltf::Model` structure is now exposed through
    `Trade::TinyGltfImporter::importerState()` for easier access to extra
    data, exposing also @ref Trade::SceneData::importerState() and
    @ref Trade::TextureData::importerState()
-   `TinyGltfImporter` now implements mapping between names and IDs for all
    currently imported data
-   `TinyGltfImporter` now imports alpha mode, alpha mask and double sided
    material properties
-   `TinyGltfImporter` now imports all camera properties together with type and
    aspect ratio / projection size
-   @ref Trade::AssimpImporter "AssimpImporter", @ref Trade::OpenGexImporter "OpenGexImporter"
    and `TinyGltfImporter` now support
    @cpp Trade::AbstractImporter::Feature::FileCallback @ce for specifying
    custom callbacks to load extra files (see
    [mosra/magnum-plugins#47](https://github.com/mosra/magnum-plugins/pull/47))
-   @ref Trade::StbImageConverter "StbImageConverter" was updated with a new
    version of `stb_image_write`, supporting also JPEG export now (see
    [mosra/magnum-plugins#26](https://github.com/mosra/magnum-plugins/pull/26))
-   @ref Text::StbTrueTypeFont "StbTrueTypeFont" was updated with a new version
    of `stb_truetype`, supporting also OpenType fonts now
-   @ref Text::FreeTypeFont "FreeTypeFont", @ref Text::HarfBuzzFont "HarfBuzzFont"
    and @ref Text::StbTrueTypeFont "StbTrueTypeFont" plugins can now be loaded
    also using the `OpenTypeFont` alias, in addition to `TrueTypeFont

@subsection changelog-plugins-2018-10-changes Changes and improvements

-   Texture coordinate, color vertex attribute and base object color import in
    `TinyGltfImporter`
    (see [mosra/magnum-plugins#41](https://github.com/mosra/magnum-plugins/pull/41),
    [mosra/magnum-plugins#43](https://github.com/mosra/magnum-plugins/pull/43))
-   Mesh name and complete multi-primitive mesh loading in
    `TinyGltfImporter` (see [mosra/magnum-plugins#48](https://github.com/mosra/magnum-plugins/issues/48))
-   @ref Trade::OpenGexImporter "OpenGexImporter" and
    `TinyGltfImporter` now properly import alpha for
    @ref Trade::PhongMaterialData
-   `TinyGltfImporter` now exposes the translation/rotation/scaling properties
    of @cpp Trade::ObjectData3D @ce separately if they are separate in the
    source file
-   @ref Text::HarfBuzzFont "HarfBuzzFont" is now providing `TrueTypeFont`,
    similarly to other plugins supporting TTF fonts
-   @ref Trade::StbImageImporter "StbImageImporter" now properly supports Apple
    proprietary [CgBI PNGs](https://iphonedev.wiki/CgBI_file_format). Stock
    `libPNG` doesn't support that but there are forks that can do it, updated
    documentation of @ref Trade::PngImporter "PngImporter" to mention that.
-   @ref Trade::StbImageConverter "StbImageConverter" no longer requires input
    data to be tightly packed, allowing to export image subrectangles
-   @ref Trade::StbImageConverter "StbImageConverter" now prints warnings when
    channels are lost on output due to limitations of the output format (such
    as alpha channel for JPEGs)
-   @cpp Trade::TinyGltfImporter::defaultScene() @ce now returns the first
    scene if no default scene is present in the file
-   New @cpp Trade::TinyGltfImporter::TinyGltfImporter(PluginManager::Manager<Trade::AbstractImporter>&) @ce
    constructor for easier usage of statically-built plugins
-   Cleaned up some unnecessary memory copies and reallocations in the
    `TinyGltfImporter` implementation
-   Upstreamed local patches to `tiny_gltf` (see
    [mosra/magnum-plugins#45](https://github.com/mosra/magnum-plugins/pull/45))

@subsection changelog-plugins-2018-10-buildsystem Build system

-   There's now a PPA for Ubuntu packages. See @ref building-plugins-packages-deb
    for more information. See also
    [mosra/magnum-plugins#44](https://github.com/mosra/magnum-plugins/pull/44).
-   TinyGLTF headers are now installed alongside the plugin for easier access
    to importer state.
-   `TinyGltfImporter` no longer depends on
    @ref Trade::StbImageImporter "StbImageImporter" to import images embedded
    in buffers or data URIs. Instead it proxies the loading to
    @ref Trade::AnyImageImporter "AnyImageImporter", the same way as was
    already done for external files.

@subsection changelog-plugins-2018-10-bugfixes Bug fixes

-   Fixed a `TinyGltfImporter` crash on materials without a PBR extension (see
    [mosra/magnum-plugins#41](https://github.com/mosra/magnum-plugins/pull/41))
-   Fixed improper order of applying translation/rotation/scaling node
    transformations in `TinyGltfImporter`
-   `TinyGltfImporter` now loads external images from `*.glb` files and images
    embedded as URI data properly
-   `TinyGltfImporter` now properly imports non-indexed meshes and meshes
    without the normal attribute
-   Fixed quite a few critical issues with `TinyGltfImporter` mesh data import
    (see [mosra/magnum-plugins#42](https://github.com/mosra/magnum-plugins/issues/42))
-   Updated `stb_image` to fix `undefined symbol: __cpu_model` error when
    compiling @ref Trade::StbImageImporter "StbImageImporter" on GCC 5
-   @ref Trade::AssimpImporter "AssimpImporter" now properly prints out an
    message on file opening error instead of failing silently
-   @ref Trade::AssimpImporter "AssimpImporter" incorrectly imported object
    transformation matrices transposed
-   @ref Trade::AssimpImporter "AssimpImporter" incorrectly imported the scene
    twice, once as a scene and once as a object that all other objects were
    parented to. However, in presence of postprocessing flags such as
    `PreTransformVertices` Assimp collapses all nodes into one and then the
    node is imported as a single object.
-   @ref Text::FreeTypeFont "FreeTypeFont" was not handling subsequent calls
    to @ref Text::FreeTypeFont::initialize() properly (see
    [mosra/magnum-plugins#49](https://github.com/mosra/magnum-plugins/pull/49))

@subsection corrade-changelog-2018-10-deprecated Deprecated APIs

-   `ColladaImporter` is deprecated because it's based on an outdated toolkit.
    Moreover, due to the complexity of the COLLADA format and poor conformance
    of various exporters it's not feasible to maintain a builtin importer
    anymore and thus this plugin is scheduled for removal in a future release.
    Please consider either using @ref Trade::AssimpImporter "AssimpImporter"
    for COLLADA import or switching to simpler and better supported formats
    such as glTF or OpenGEX using `TinyGltfImporter` or
    @ref Trade::OpenGexImporter "OpenGexImporter". There's also the official
    [COLLADA2GLTF](https://github.com/KhronosGroup/COLLADA2GLTF) converter.

Changelogs for previous versions are available in
@ref changelog-plugins-old "Archived plugin changelogs".

*/

}
