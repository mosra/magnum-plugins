clone_depth: 1

environment:
  matrix:
  # - TARGET: desktop
  #   COMPILER: msvc
  #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
  #   APPVEYOR_JOB_NAME: windows-msvc2015
  # - TARGET: desktop
  #   COMPILER: msvc
  #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  #   APPVEYOR_JOB_NAME: windows-msvc2017
  - TARGET: desktop
    COMPILER: msvc
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    APPVEYOR_JOB_NAME: windows-msvc2019
  # - TARGET: desktop
  #   COMPILER: msvc
  #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
  #   APPVEYOR_JOB_NAME: windows-msvc2022
  # - TARGET: desktop
  #   COMPILER: msvc
  #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
  #   APPVEYOR_JOB_NAME: windows-static-msvc2019
  #   BUILD_STATIC: ON
  # - TARGET: desktop
  #   COMPILER: msvc
  #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
  #   APPVEYOR_JOB_NAME: windows-static-msvc2022
  #   BUILD_STATIC: ON
  - TARGET: desktop
    COMPILER: msvc-clang
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    APPVEYOR_JOB_NAME: windows-msvc2019-clang
  - TARGET: desktop
    COMPILER: msvc-clang
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
    APPVEYOR_JOB_NAME: windows-msvc2022-clang
  # - TARGET: desktop
  #   COMPILER: msvc
  #   # Same reasoning as in Corrade for /EHsc
  #   COMPILER_EXTRA: -DCMAKE_CXX_FLAGS="/permissive- /EHsc" -DMSVC_COMPATIBILITY=OFF
  #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
  #   APPVEYOR_JOB_NAME: windows-conforming-msvc2019
  # - TARGET: desktop
  #   COMPILER: msvc
  #   # Not playing with fire and using /EHsc on 2022 as well
  #   COMPILER_EXTRA: -DCMAKE_CXX_FLAGS="/permissive- /EHsc" -DMSVC_COMPATIBILITY=OFF
  #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
  #   APPVEYOR_JOB_NAME: windows-conforming-msvc2022
  # - TARGET: desktop
  #   COMPILER: mingw
  #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  #   APPVEYOR_JOB_NAME: windows-mingw
  # - TARGET: rt
  #   # This actually isn't needed anywhere, but without this the %COMPILE:~0,4%
  #   # expressions cause a "The syntax of the command is incorrect." sometimes
  #   # but not in all cases. What the fuck, cmd.exe.
  #   COMPILER: msvc
  #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  #   APPVEYOR_JOB_NAME: windows-rt-msvc2017

install:
# Ninja. `cinst ninja` started 503ing in late November 2019 and wasn't really
# reliable before either. So install by hand, as that's reliable always.
- IF NOT EXIST %APPVEYOR_BUILD_FOLDER%\ninja-win.zip appveyor DownloadFile https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-win.zip
- 7z x ninja-win.zip -oC:/tools/ninja

- set PATH=C:/Sys/bin;C:/tools/ninja;%PATH%
- IF "%TARGET%" == "desktop" IF "%COMPILER%" == "mingw" pip install codecov

# assimp, for MSVC 2022, 2019, 2017, clang-cl and MinGW
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2022" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/assimp-5.1.2-windows-2019-debug.zip && 7z x assimp-5.1.2-windows-2019-debug.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2019" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/assimp-5.1.2-windows-2019-debug.zip && 7z x assimp-5.1.2-windows-2019-debug.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2017" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/assimp-5.1.2-windows-2016-debug.zip && 7z x assimp-5.1.2-windows-2016-debug.zip -o%APPVEYOR_BUILD_FOLDER%\deps
# Plugin built against 5.1.2 fails to link due to
#   undefined reference to `__imp___acrt_iob_func'
# I have NO PATIENCE with this library. NONE. Going back to 5.0.1, then.
- IF "%TARGET%" == "desktop" IF "%COMPILER%" == "mingw" appveyor DownloadFile https://ci.magnum.graphics/assimp-5.0.1-windows-mingw.zip && 7z x assimp-5.0.1-windows-mingw.zip -o%APPVEYOR_BUILD_FOLDER%\deps

# libjpeg-turbo, for MSVC 2022, 2019, 2017 and clang-cl only; MinGW builds it
# because FFS
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2022" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/libjpeg-turbo-2.0.6-windows-2019.zip && 7z x libjpeg-turbo-2.0.6-windows-2019.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2019" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/libjpeg-turbo-2.0.6-windows-2019.zip && 7z x libjpeg-turbo-2.0.6-windows-2019.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2017" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/libjpeg-turbo-2.0.6-windows-2016.zip && 7z x libjpeg-turbo-2.0.6-windows-2016.zip -o%APPVEYOR_BUILD_FOLDER%\deps

# libwebp, except for RT and MinGW because of course "a windows binary" by
# Google is MSVC only
- IF NOT "%TARGET%" == "rt" IF NOT "%COMPILER%" == "mingw" IF NOT EXIST %APPVEYOR_BUILD_FOLDER%\libwebp-1.2.4-windows-x64.zip appveyor DownloadFile https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-1.2.4-windows-x64.zip
- IF NOT "%TARGET%" == "rt" IF NOT "%COMPILER%" == "mingw" 7z x libwebp-1.2.4-windows-x64.zip && ren libwebp-1.2.4-windows-x64 libwebp

# libpng, for MSVC 2022, 2019 and clang-cl. MSVC 2017 seems to work well with
# the 2019 build, MinGW doesn't work at all due to ABI issues.
- IF "%TARGET%" == "desktop" IF "%COMPILER%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/libpng-1.6.39-windows-2019.zip && 7z x libpng-1.6.39-windows-2019.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%COMPILER%" == "msvc-clang" appveyor DownloadFile https://ci.magnum.graphics/libpng-1.6.39-windows-2019-clang-cl.zip && 7z x libpng-1.6.39-windows-2019-clang-cl.zip -o%APPVEYOR_BUILD_FOLDER%\deps

# OpenAL
- IF NOT "%TARGET%" == "rt" IF NOT EXIST %APPVEYOR_BUILD_FOLDER%\openal-soft-1.19.1-bin.zip appveyor DownloadFile https://openal-soft.org/openal-binaries/openal-soft-1.19.1-bin.zip
- IF NOT "%TARGET%" == "rt" 7z x openal-soft-1.19.1-bin.zip && ren openal-soft-1.19.1-bin openal && echo [General] > %APPDATA%/alsoft.ini & echo drivers=null >> %APPDATA%/alsoft.ini
# Unlike with Magnum itself which copies OpenAL DLL to its output directory,
# here we need to do that ourselves as we don't have Magnum's build dir in PATH
- IF "%TARGET%" == "desktop" ren openal\bin\Win64\soft_oal.dll OpenAL32.dll

# openexr, for MSVC 2022, 2019, 2017, clang-cl and MinGW. Needs also zlib
# (below).
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2022" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/openexr-2.5.5-windows-2019-debug.zip && 7z x openexr-2.5.5-windows-2019-debug.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2019" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/openexr-2.5.5-windows-2019-debug.zip && 7z x openexr-2.5.5-windows-2019-debug.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2017" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/openexr-2.5.5-windows-2016-debug.zip && 7z x openexr-2.5.5-windows-2016-debug.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%COMPILER%" == "mingw" appveyor DownloadFile https://ci.magnum.graphics/openexr-2.5.5-windows-mingw.zip && 7z x openexr-2.5.5-windows-mingw.zip -o%APPVEYOR_BUILD_FOLDER%\deps

# DevIL
- IF NOT "%TARGET%" == "rt" IF NOT EXIST %APPVEYOR_BUILD_FOLDER%\DevIL-SDK-x64-1.7.8.zip appveyor DownloadFile http://downloads.sourceforge.net/openil/DevIL-SDK-x64-1.7.8.zip
- IF NOT "%TARGET%" == "rt" mkdir devil && cd devil && 7z x ..\DevIL-SDK-x64-1.7.8.zip && mkdir lib && move unicode\*.lib lib\ && cd ..

# FreeType, for MSVC 2022, 2019, 2017 and clang-cl only
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2022" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/freetype-2.10.4-windows-2019.zip && 7z x freetype-2.10.4-windows-2019.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2019" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/freetype-2.10.4-windows-2019.zip && 7z x freetype-2.10.4-windows-2019.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2017" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/freetype-2.10.4-windows-2016.zip && 7z x freetype-2.10.4-windows-2016.zip -o%APPVEYOR_BUILD_FOLDER%\deps

# Basis Universal
# TODO: currently it uses the bundled zstd (because lazy), when that gets
# dropped this needs to fetch a real zstd also
- set BASIS_VERSION=1_15_update2
- IF NOT EXIST %APPVEYOR_BUILD_FOLDER%\v%BASIS_VERSION%.zip appveyor DownloadFile https://github.com/BinomialLLC/basis_universal/archive/v%BASIS_VERSION%.zip
- 7z x v%BASIS_VERSION%.zip && ren basis_universal-%BASIS_VERSION% basis_universal

# SPIRV-Tools, for MSVC 2022, 2019, 2017 and clang-cl only
# This line REQUIRES the COMPILER variable to be set on rt builds, otherwise it
# complains that "The syntax of the command is incorrect.". The same done in
# build_script below works without problems. What the hell.
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2022" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/spirv-tools-2020.4-windows-2019-debug.zip && 7z x spirv-tools-2020.4-windows-2019-debug.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2019" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/spirv-tools-2020.4-windows-2019-debug.zip && 7z x spirv-tools-2020.4-windows-2019-debug.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2017" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/spirv-tools-2020.4-windows-2016-debug.zip && 7z x spirv-tools-2020.4-windows-2016-debug.zip -o%APPVEYOR_BUILD_FOLDER%\deps

# Glslang, for MSVC 2022, 2019, 2017 and clang-cl only
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2022" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/glslang-8.13.3743-windows-2019-debug.zip && 7z x glslang-8.13.3743-windows-2019-debug.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2019" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/glslang-8.13.3743-windows-2019-debug.zip && 7z x glslang-8.13.3743-windows-2019-debug.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2017" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/glslang-8.13.3743-windows-2016-debug.zip && 7z x glslang-8.13.3743-windows-2016-debug.zip -o%APPVEYOR_BUILD_FOLDER%\deps

# zlib for MSVC 2022, 2019 and clang-cl; MinGW. MSVC 2017 seems to work well
# with the 2019 build. Needed by OpenEXR and libpng above.
- IF "%TARGET%" == "desktop" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/zlib-1.2.13-windows-2019.zip && 7z x zlib-1.2.13-windows-2019.zip -o%APPVEYOR_BUILD_FOLDER%\deps
# For some reason zlibstatic.a is already present? from Assimp? let's overwrite
- IF "%TARGET%" == "desktop" IF "%COMPILER%" == "mingw" appveyor DownloadFile https://ci.magnum.graphics/zlib-1.2.13-windows-mingw.zip && 7z x -aoa zlib-1.2.13-windows-mingw.zip -o%APPVEYOR_BUILD_FOLDER%\deps

# zstd for MSVC 2022, 2019 and clang-cl; MinGW. MSVC 2017 seems to work well
# with the 2019 build. Needed by Basis Universal.
- IF "%TARGET%" == "desktop" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/zstd-1.5.2-windows-2019.zip && 7z x zstd-1.5.2-windows-2019.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%COMPILER%" == "mingw" appveyor DownloadFile https://ci.magnum.graphics/zstd-1.5.2-windows-mingw.zip && 7z x zstd-1.5.2-windows-mingw.zip -o%APPVEYOR_BUILD_FOLDER%\deps

# meshoptimizer for MSVC 2022, 2019 and clang-cl; MinGW. MSVC 2017 doesn't work
# with the 2019 build unfortunately, and can't build it because of
# https://github.com/actions/runner-images/issues/3294
- IF "%TARGET%" == "desktop" IF "%COMPILER:~0,4%" == "msvc" appveyor DownloadFile https://ci.magnum.graphics/meshoptimizer-0.18-windows-2019-debug.zip && 7z x meshoptimizer-0.18-windows-2019-debug.zip -o%APPVEYOR_BUILD_FOLDER%\deps
- IF "%TARGET%" == "desktop" IF "%COMPILER%" == "mingw" appveyor DownloadFile https://ci.magnum.graphics/meshoptimizer-0.18-windows-mingw.zip && 7z x meshoptimizer-0.18-windows-mingw.zip -o%APPVEYOR_BUILD_FOLDER%\deps

build_script:
- IF NOT "%BUILD_STATIC%" == "ON" set BUILD_STATIC=OFF
- IF "%TARGET%" == "desktop" IF "%COMPILER:~0,4%" == "msvc" call package\ci\appveyor-desktop.bat
- IF "%TARGET%" == "desktop" IF "%COMPILER%" == "mingw" call package\ci\appveyor-desktop-mingw.bat
- IF "%TARGET%" == "rt" call package\ci\appveyor-rt.bat

cache:
- ninja-win.zip -> package/ci/appveyor-cache-reset.txt
- openal-soft-1.19.1-bin.zip -> package/ci/appveyor-cache-reset.txt
- libjpeg-turbo-1.5.0.tar.gz -> package/ci/appveyor-cache-reset.txt
- DevIL-SDK-x64-1.7.8.zip -> package/ci/appveyor-cache-reset.txt
- basis_universal-%BASIS_VERSION%.zip -> package/ci/appveyor-cache-reset.txt
# meshoptimizer
- v0.14.zip -> package/ci/appveyor-cache-reset.txt
- libwebp-1.2.4-windows-x64.zip -> package/ci/appveyor-cache-reset.txt
